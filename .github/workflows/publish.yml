name: Publish to npm

on:
  push:
    branches: [master]
    paths: ['package.json']
    tags: ['v*']
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Check if version changed
        id: version-check
        run: |
          OLD_VERSION=$(git show HEAD~1:package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version package.json)
          echo "Old version: $OLD_VERSION"
          echo "New version: $NEW_VERSION"
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "version-changed=true" >> $GITHUB_OUTPUT
          else
            echo "version-changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup Node.js
        if: steps.version-check.outputs.version-changed == 'true' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Install dependencies
        if: steps.version-check.outputs.version-changed == 'true' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        run: npm install

        
      - name: Run linter
        if: steps.version-check.outputs.version-changed == 'true' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        run: npm run lint --if-present

      - name: Build package
        if: steps.version-check.outputs.version-changed == 'true' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        run: npm run build

      - name: Publish to npm
        if: steps.version-check.outputs.version-changed == 'true' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}